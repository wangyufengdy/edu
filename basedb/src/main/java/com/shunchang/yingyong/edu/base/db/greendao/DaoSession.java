package com.shunchang.yingyong.edu.base.db.greendao;

import com.shunchang.yingyong.edu.base.db.entity.KeepEntity;
import com.shunchang.yingyong.edu.base.db.entity.UpdateLastTime;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig keepEntityDaoConfig;
    private final KeepEntityDao keepEntityDao;


    private final DaoConfig updateLastTimeDaoConfig;

    private final UpdateLastTimeDao updateLastTimeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        keepEntityDaoConfig = daoConfigMap.get(KeepEntityDao.class).clone();
        keepEntityDaoConfig.initIdentityScope(type);
        keepEntityDao = new KeepEntityDao(keepEntityDaoConfig, this);
        registerDao(KeepEntity.class, keepEntityDao);




        updateLastTimeDaoConfig = daoConfigMap.get(KeepEntityDao.class).clone();
        updateLastTimeDaoConfig.initIdentityScope(type);
        updateLastTimeDao = new UpdateLastTimeDao(updateLastTimeDaoConfig, this);
        registerDao(UpdateLastTime.class, updateLastTimeDao);

    }
    
    public void clear() {
        keepEntityDaoConfig.clearIdentityScope();
        updateLastTimeDaoConfig.clearIdentityScope();
    }

    public KeepEntityDao getKeepEntityDao() {
        return keepEntityDao;
    }


    public UpdateLastTimeDao getUpdateLastTimeDao() {
        return updateLastTimeDao;
    }
}
